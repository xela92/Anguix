#!/bin/bash
#Comando per estrarre, onde evitare l'errore di trailing garbage: gunzip -q < file.tar.gz | tar xvf - 
#tail -n+4 $0 > cazzo.tar.gz; exit 0
echo "Welcome to the Anguix Installer"
function preinst ( )
{
#Struttura del preinst: 1: modifica pacchetti. 2: modifica configurazioni.
#Remove Packages - in ordine, programmi, guide, fonts e pacchetti lingua
#setta le variabili che andranno nel conf di localepurge, così che localepurge possa essere configurato senza la necessità di utilizzare il suo configuratore, ingestibile durante l'installazione.
#S_LOCALE=it; M_LOCALE=it_IT; L_LOCALE=italian; UTF8_LOCALE=it_IT.UTF-8
UTF8_LOCALE=`echo $LANG |sed 's/\.utf8/\.UTF-8/g'`
S_LOCALE=`for i in 1,2; do echo $LANG |cut -c $i; done`
M_LOCALE=`echo $LANG |cut -d '.' -f1`
L_LOCALE=`cat /etc/locale.alias |grep $M_LOCALE |sed 's/\ .*//g'`
for FIRSTCHAR in 1
do 
UPPER=`echo "$L_LOCALE" | cut -c $FIRSTCHAR  |tr '[a-z]' '[A-Z]'` 
LOWER=`echo "$L_LOCALE" |cut -c $FIRSTCHAR` 
LANG_PACK=`echo "$L_LOCALE" | sed 's/./'[''$LOWER'',''$UPPER'']'/'$FIRSTCHAR > /tmp/anguix_lang.tmp`
done
echo "S_LOCALE: $S_LOCALE" > /etc/anguix_lang.conf
echo "M_LOCALE: $M_LOCALE" > /etc/anguix_lang.conf
echo "L_LOCALE: $L_LOCALE" >> /etc/anguix_lang.conf
echo "LANG_PACK: $LANG_PACK" >> /etc/anguix_lang.conf
echo "UTF8_LOCALE: $UTF8_LOCALE" >> /etc/anguix_lang.conf
apt-get purge -y evolution-exchange gnome-games gbrainy example-content empathy empathy-common gwibber rhythmbox tomboy yelp gnome-user-guide ubuntu-docs gnome-themes-ubuntu gnome-themes-selected  
RMPACKS1=`apt-cache search language-pack | grep -v -f /tmp/anguix_lang.tmp |sed 's/\ -\ .*//g'` 
RMPACKS2=`apt-cache search openoffice.org-help |grep -v -f /tmp/anguix_lang.tmp |sed 's/\ -\ .*//g'`
apt-get -y purge $RMPACKS1 $RMPACKS2
UDESK=`dpkg --status ubuntu-desktop |grep installed |sed 's/Status\:\ .*\ ok//g'`
if [ "$UDESK" = "installed" ]; then
# evito apt-get remove ubuntu-desktop, scrivo un file di conf
echo "1" > /etc/udesk.conf
else
echo "0" > /etc/udesk.conf
fi
#Facciamo installare localepurge direttamente dal deb, quindi non esegue il postinst bensì si basa - grazie al nostro postinst, e al file di conf /etc/locale.nopurge -  sulla variabile che abbiamo settato prima, che andrà a completare il file di conf - sono un genio, lo so :P
# Hacks and Tricks
#swap trick--> setta la "swappiness", la percentuale di swap.
sysctl -q vm.swappiness
sysctl vm.swappiness=10
#TTY removal
cp /etc/default/console-setup /etc/default/console-setup.backup
cp /etc/init/tty3.conf /etc/init/tty3.conf.backup
cp /etc/init/tty4.conf /etc/init/tty4.conf.backup
cp /etc/init/tty5.conf /etc/init/tty5.conf.backup
cp /etc/init/tty6.conf /etc/init/tty6.conf.backup
echo "
VERBOSE_OUTPUT=no
ACTIVE_CONSOLES="/dev/tty[1-2]"
CHARMAP="UTF-8"
CODESET="Lat15"
FONTFACE="VGA"
FONTSIZE="16"
XKBMODEL="pc105"
XKBLAYOUT="it"
XKBVARIANT=""
XKBOPTIONS=""
"> /etc/default/console-setup
echo "
respawn
exec /sbin/getty -8 38400 tty3
" > /etc/init/tty3.conf
echo "
respawn
exec /sbin/getty -8 38400 tty4
" > /etc/init/tty4.conf
echo "
respawn
exec /sbin/getty -8 38400 tty5
" > /etc/init/tty5.conf
echo "
respawn
exec /sbin/getty -8 38400 tty6
" > /etc/init/tty6.conf

# Disattivazione di alcuni repo ufficiali (i repo ppa verranno installati direttamente col tar.gz)
#creo il backup prima
cp /etc/apt/sources.list /etc/apt/sources.list.backup
#commento i repo --> disattivata, crea broken packages
#cat /etc/apt/sources.list |sed 's/deb\ http:\/\/archive.ubuntu.com\/ubuntu\ lucid\ main\ restricted/#deb\ http:\/\/archive.ubuntu.com\/ubuntu\ lucid\ main\ restricted/g' |sed 's/deb\ http:\/\/security.ubuntu.com\/ubuntu\ lucid-security\ main\ restricted/#deb\ http:\/\/security.ubuntu.com\/ubuntu\ lucid-security\ main\ restricted/g' |sed 's/deb\ http:\/\/archive.ubuntu.com\/ubuntu\ lucid-updates\ main\ restricted/#deb\ http:\/\/archive.ubuntu.com\/ubuntu\ lucid-updates\ main\ restricted/g' 
#decommento multiverse e universe
cat /etc/apt/sources.list |sed 's/#\ deb http:\/\/archive.ubuntu.com\/ubuntu\ lucid\ universe/deb\ http:\/\/archive.ubuntu.com\/ubuntu\ lucid universe/g' |sed 's/#\ deb\ http:\/\/archive.ubuntu.com\/ubuntu\ lucid\ multiverse/deb\ http:\/\/archive.ubuntu.com\/ubuntu\ lucid\ multiverse/g'> /tmp/sources.list.tmp
mv /tmp/sources.list.tmp /etc/apt/sources.list
#cambio nome distro
cp /etc/lsb-release /etc/lsb-release.ubuntu
cat /etc/lsb-release |sed 's/[u,U]buntu/Anguix/g' |sed 's/lucid/Viridis/g' |sed 's/10.04.1\ LTS/0.1alpha5/g' | sed 's/10.04/0.1alpha5/g' > /tmp/lsb-release.tmp
#todo: mettere direttamente l'lsb-release nel tar.gz
mv /tmp/lsb-release.tmp /etc/lsb-release

# Nel postinst inseriremo anche le chiamata gconf da aggiungere di default(DONE), per esempio per mettere i pannelli trasparenti di default (DONE), aggiungere dockbarx di default, etc. etc.
#Nel postinst verrà anche messa l'esecuzione di nautilus-scripts-installer, che aggiunge gli scripts by xela92 in nautilus-actions (DONE) (i files per fare ciò sono nella dir /usr/share/nautilus-scripts-installer, che verrà installata tramite deb)--> TODO

#Da aggiungere: rm tutti i files inutili, tipo temi etc
#IDEA: apt-get remove temididefault (DONE), installazione via tar.gz di quelli ok, workaroundosa ma mi piace
#
# aggiungere immagini a tema, suoni a tema --> magari per la beta questo OPPURE TOGLIERE TUTTI I FASTIDIOSI SUONI DI SISTEMA, ALMENO DI DEFAULT, CHE NE DICI??? --> accettata
}
function inst ( )
{
LINE=`awk '/^END_OF_FILE/ {print NR + 1; exit 0; }' $0`
tail -n+$LINE $0 > /tmp/Anguix-files.tar.gz
gunzip -q < /tmp/Anguix-files.tar.gz | tar xvf - |cut -d '.' -f2,3,4,5,6,7,8,9 >/etc/anguix-files
}
function postinst ( )
{
#NON TOCCATELO, questo lo gestisco io.
# 1 - Pannelli
#gconftool-2 --type string --set /apps/panel/toplevels/bottom_panel_screen0/background/type "color"
#gconftool-2 --type int --set /apps/panel/toplevels/bottom_panel_screen0/background/opacity 49931
#gconftool-2 --type string --set /apps/panel/toplevels/top_panel_screen0/background/type "color"
#gconftool-2 --type int --set /apps/panel/toplevels/top_panel_screen0/background/opacity 39327
# 2 - Metacity
#gconftool-2 --type string --set /apps/metacity/general/theme "Turrican"
#gconftool-2 --type string --set /desktop/gnome/interface/gtk_color_scheme "fg_color:#28d69a6c5bb1 bg_color:#181818181818 text_color:#00000448002e base_color:#c571f8fee6c6 selected_fg_color:#2e28a0f21775 selected_bg_color:#3da1f3753e1e tooltip_fg_color:#000000000000 tooltip_bg_color:#9d9d9d9d9d9d"
# 3 - Temi
#gconftool-2 --type string --set /desktop/gnome/interface/gtk_theme "Viridis_Theme-3.0"
#gconftool-2 --type string --set /desktop/gnome/interface/icon_theme "ubuntu-mono-dark"
#gconftool-2 --type string --set /desktop/gnome/background/picture_filename "/usr/share/backgrounds/moreliaviridis.png"
nautilus-scripts-installer
cat /etc/anguix_lang.conf |grep S_LOCALE |sed 's/S_LOCALE:\ //g' >> /etc/locale.nopurge
cat /etc/anguix_lang.conf |grep M_LOCALE |sed 's/M_LOCALE:\ //g' >> /etc/locale.nopurge
cat /etc/anguix_lang.conf |grep UTF8_LOCALE |sed 's/UTF8_LOCALE:\ //g' >> /etc/locale.nopurge
}
function prerm ( )
{
mv /etc/apt/sources.list.backup /etc/apt/sources.list
mv /etc/lsb-release.ubuntu /etc/lsb-release 
}
function removal ( )
{
cat /etc/anguix-files |xargs rm
    #qui dentro ci sta rm in tutta la sua bellezza, con i dati del tar della funzione inst
}
function postrm ( )
{
mv /etc/default/console-setup.backup /etc/default/console-setup 
mv /etc/init/tty3.conf.backup /etc/init/tty3.conf
mv /etc/init/tty4.conf.backup /etc/init/tty4.conf
mv /etc/init/tty5.conf.backup /etc/init/tty5.conf
mv /etc/init/tty6.conf.backup /etc/init/tty6.conf
if [ "`cat /etc/udesk.conf`" = "1" ]; then
apt-get install ubuntu-desktop
fi
rm /etc/udesk.conf
rm /etc/anguix_lang.conf
apt-get -y install evolution-exchange gnome-games gbrainy example-content empathy empathy-common gwibber rhythmbox tomboy yelp gnome-user-guide ubuntu-docs gnome-themes-ubuntu gnome-themes-selected
}
case $1 in
        install) echo "running preinst"
                 preinst
                 echo "installing files"
                 inst
                  echo "running postinst"
                 postinst
        ;;
        remove) echo "running prerm"
                prerm
                echo "removing files"
                removal                
                echo "running postrm"                
                postrm
        ;;
        *) echo "usage: {$0 install|remove}"
        ;;
esac
exit 0
END_OF_FILE
