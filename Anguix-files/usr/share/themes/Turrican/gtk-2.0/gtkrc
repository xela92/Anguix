gtk-color-scheme = "base_color:#fff\ntext_color:#0f0f0f\nbg_color:#c7c7c7\nfg_color:#0f0f0f\nselected_bg_color:#9FB4C6\nselected_fg_color:#0f0f0f\ntooltip_bg_color:#FCEBA3\ntooltip_fg_color:#0f0f0f"

# menu delay (may broke Thunar and Xchat)
gtk-menu-popup-delay = 1

style "default" {
	xthickness = 1
	ythickness = 1

	#######################
	# Style Properties
	#######################
	GtkButton::child-displacement-x = 1
	GtkButton::child-displacement-y = 1
	GtkButton::default-border = { 0, 0, 0, 0 }

	GtkCheckButton::indicator-size = 14

	GtkPaned::handle-size = 6

	GtkRange::trough-border = 0
	GtkRange::slider-width = 15
	GtkRange::stepper-size = 15
	GtkRange::trough-under-steppers = 0

	GtkScale::trough-border = 0
	GtkScale::slider-width = 12
	GtkScale::slider-length = 16
	GtkScale::trough-side-details = 1

	GtkScrollbar::trough-border = 0
	GtkScrollbar::slider-width = 13
	GtkScrollbar::min-slider-length = 30

	GtkMenuBar::internal-padding = 0
	GtkExpander::expander-size = 12
	GtkToolbar::internal-padding = 0
	GtkTreeView::expander-size = 12
	GtkTreeView::vertical-separator = 0
	#GtkNotebook::tab-overlap = -1

	GtkMenu::horizontal-padding = 0
	GtkMenu::vertical-padding = 0
	
	GtkToolbar::shadow_type = GTK_SHADOW_NONE
	GtkMenuBar::shadow_type = GTK_SHADOW_NONE
	GtkMenuBar::window-dragging = 1

	WnckTasklist::fade-overlay-rect = 0
	# The following line hints to gecko (and possibly other appliations)
	# that the entry should be drawn transparently on the canvas.
	# Without this, gecko will fill in the background of the entry.
	
	GtkEntry::honors-transparent-bg-hint = 1
	GtkEntry::progress-border = { 2, 2, 2, 2 }

	GtkWidget::new-tooltip-style = 0

	####################
	# Color Definitions
	####################
	bg[NORMAL]        = @bg_color
	bg[PRELIGHT]      = shade (1.02, @bg_color)
	bg[SELECTED]      = @selected_bg_color
	bg[INSENSITIVE]   = @bg_color
	bg[ACTIVE]        = shade (0.9, @bg_color)

	fg[NORMAL]        = @fg_color
	fg[PRELIGHT]      = @fg_color
	fg[SELECTED]      = @selected_fg_color
	fg[INSENSITIVE]   = darker (@bg_color)
	fg[ACTIVE]        = @fg_color

	text[NORMAL]      = @text_color
	text[PRELIGHT]    = @text_color
	text[SELECTED]    = @selected_fg_color
	text[INSENSITIVE] = darker (@bg_color)
	text[ACTIVE]      = @selected_fg_color

	base[NORMAL]      = @base_color
	base[PRELIGHT]    = shade (0.98, @bg_color)
	base[SELECTED]    = @selected_bg_color
	base[INSENSITIVE] = @bg_color
	base[ACTIVE]      = shade (0.96, @selected_bg_color)

	engine "murrine" {
		arrowstyle          = 1     # 0 = stroked arrows, 1 = filled arrows
		animation           = FALSE
		border_shades       = {1.0, 1.0} # gradient to draw on border
		colorize_scrollbar  = TRUE
		comboboxstyle       = 0     # 0 = no effects, 1 = colorize under the arrow
		contrast            = 0.85
		focus_color         = shade (1.0, @selected_bg_color)
		glazestyle          = 3     # 0 = flat, 1 = curved, 2 = concave, 3 = top curved, 4 = beryl highlight, 5 = new
		glow_shade          = 1.0
		glowstyle           = 1     # 0 = top, 1 = bottom, 2 = top and bottom, 3 = horizontal, 4 = centered glow
		gradient_shades     = {1.14,1.09,1.08,1.03}
		highlight_shade     = 1.01  # set highlight amount for buttons or widgets
		lightborder_shade   = 1.13  # sets lightborder amount for buttons or widgets
		lightborderstyle    = 1     # 0 = lightborder on top side, 1 = lightborder on all sides
		listviewheaderstyle = 1     # 0 = flat, 1 = glassy, 2 = raised
		listviewstyle       = 1     # 0 = nothing, 1 = dotted
		menubaritemstyle    = 1     # 0 = menuitem look, 1 = button look
		menubarstyle        = 0     # 0 = flat, 1 = glassy, 2 = gradient, 3 = striped
		menuitemstyle       = 1     # 0 = flat, 1 = glassy, 2 = striped
		menustyle           = 0     # 0 = no vertical menu stripe, 1 = display vertical menu stripe
		progressbarstyle    = 0     # 0 = nothing, 1 = diagonal stripes, 2 = blocks
		reliefstyle         = 3     # 0 = flat, 1 = inset, 2 = shadow, 3 = gradient shadow, 4 = 2+3
		prelight_shade	    = 1.0   # shade level for scrollbar's slider, comboboxstyle(1), and prelight state with gradient_colors
		rgba                = FALSE
		roundness           = 4     # 0 = squared, 1 = old default, more will increase roundness
		spinbuttonstyle     = 0     # 0 = nothing, 1 = add separator
		scrollbarstyle      = 0     # 0 = nothing, 1 = circles, 2 = handles, 3 = diagonal, 4 = diagonal and handles, 5 = horizontal, 6 = horizontal and handles
		sliderstyle         = 1     # 0 = nothing added, 1 = handles
		stepperstyle        = 1     # 0 = standard, 1 = integrated stepper handles, 2 = always squared steppers with adjustments
		textstyle 	    = 0     # 0 = normal text, 1 = inset, 2 = inverted inset
		toolbarstyle        = 0     # 0 = flat, 1 = glassy, 2 = gradient
		trough_shades       = {0.96, 0.96}
	}
}

style "wide" {
	xthickness = 2
	ythickness = 2
}

style "wider" {
	xthickness = 3
	ythickness = 3
}

style "entry" {
	xthickness = 3
	ythickness = 3
}

style "spinbutton" {
}

style "scale" {
	xthickness = 2
	ythickness = 2
	
	bg[NORMAL]        = shade (1.04, @bg_color)
	bg[PRELIGHT]      = shade (1.05, @bg_color)
	bg[SELECTED]      = shade (1.03, @selected_bg_color)
}

style "vscale" {
}

style "hscale" {
}

style "scrollbar" {
	xthickness = 2
	ythickness = 2
	
	bg[NORMAL]        = shade (1.04, @bg_color)
	bg[PRELIGHT]      = shade (1.05, @bg_color)
	bg[SELECTED]      = shade (0.98, @selected_bg_color)

	engine "murrine" {
		highlight_shade     = 1.0
		lightborder_shade = 1.1
		border_shades = {1.07, 1.07}
		trough_shades       = {0.88, 0.88}
		gradient_shades     = {1.11,1.06,1.05,1.0}
	}
}

style "hscrollbar" {
}

style "vscrollbar" {
}

style "notebook_bg" {
	bg[NORMAL]        = shade (1.03, @bg_color)
	bg[ACTIVE]        = shade (0.95, @bg_color)
}

style "button" {
	xthickness = 3
	ythickness = 3
	
	bg[NORMAL]        = shade (1.04, @bg_color)
	bg[PRELIGHT]      = shade (1.05, @bg_color)
	bg[ACTIVE]        = shade (0.87, @bg_color)
}

# The color is changed by the notebook_bg style, this style
# changes the x/ythickness
style "notebook" {
	xthickness = 2
	ythickness = 2

	engine "murrine" {
		contrast = 0.8
	}
}

style "statusbar" {
}

style "comboboxentry" {
}

style "menubar" {
}

style "toolbar" {
}

style "toolbar-button" = "button" {
}

style "menu" {
	xthickness = 0
	ythickness = 0
	
	bg[NORMAL]        = shade (1.13, @bg_color)
	fg[NORMAL]        = @fg_color
}

style "menu_item" {
	xthickness = 2
	ythickness = 3

	fg[PRELIGHT] = @selected_fg_color
	
	engine "murrine" {
		roundness = 0
		lightborder_shade = 1.1
		border_shades = {1.07, 1.07}
	}
}

style "menubar_item" = "menu_item" {
	bg[PRELIGHT] = @selected_bg_color
}

# This style is there to modify the separator menu items. The goals are:
# 1. Get a specific height.
# 2. The line should go to the edges (ie. no border at the left/right)
style "separator_menu_item" {
	xthickness = 1
	ythickness = 0

	GtkSeparatorMenuItem::horizontal-padding = 0
	GtkWidget::wide-separators = 1
	GtkWidget::separator-width = 1
	GtkWidget::separator-height = 7
}

style "frame_title" {
	fg[NORMAL]        = lighter (@fg_color)
}

style "treeview" {
	engine "murrine" {
		roundness = 0
	}
}

style "tooltips" {
	xthickness = 4
	ythickness = 4

	bg[NORMAL] = @tooltip_bg_color
	bg[SELECTED] = darker (@tooltip_bg_color)
	fg[NORMAL] = @tooltip_fg_color
}

# The almost useless progress bar style
style "progressbar" {
	xthickness = 0
	ythickness = 0
	
	bg[SELECTED]      = shade (0.96, @selected_bg_color)
	fg[PRELIGHT]      = @selected_fg_color

	engine "murrine" {
		highlight_shade     = 1.0
		lightborder_shade = 1.1
		border_shades = {1.07, 1.07}
		gradient_shades     = {1.11,1.06,1.05,1.0}
	}
}

style "progressbar_ubiquity" = "progressbar" {
}

style "progressbar_menu_item" = "progressbar" {
	engine "murrine" {
		roundness = 0
	}
}

# This style is based on the default style, so that the colors from the button
# style are overriden again.
style "treeview_header" = "default" {
	xthickness = 2
	ythickness = 1
	
	bg[NORMAL]        = shade (1.04, @bg_color)
	bg[PRELIGHT]      = shade (1.05, @bg_color)
}

style "treeview_header_scrolled" = "treeview_header" {
}

style "scrolledwindow" {
}

style "radiocheck"  {
	text[NORMAL]      = @selected_fg_color
	text[PRELIGHT]    = @selected_fg_color
}

style "nautilus_location" {
	bg[NORMAL]        = mix (0.60, shade (1.05, @bg_color), @selected_bg_color)
}

style "calendar" {
	engine "murrine" {
		roundness = 0
	}
}

style "applet-text" = "panel"
{
	fg[NORMAL] = @bg_color
}

style "panel" {
	xthickness = 0
	ythickness = 1

	fg[NORMAL]        = "#FFF"
	fg[PRELIGHT]      = "#FFF"
	fg[SELECTED]      = "#FFF"
	fg[INSENSITIVE]   = "#FFF"
	fg[ACTIVE]        = "#FFF"
	bg[NORMAL]        = "#303030"
	bg[ACTIVE]        = "#242424"
	bg[PRELIGHT]      = "#383838"

	engine "murrine" {
		contrast = 1.0
		lightborder_shade = 1.3
		lightborderstyle = 1
		roundness = 0
	}
}

# Wrokaroudn style for places where the text color is used instead of the fg color.
style "text_is_fg_color_workaround" {
	text[NORMAL]      = @fg_color
	text[PRELIGHT]    = @fg_color
	text[SELECTED]    = @selected_fg_color
	text[ACTIVE]      = @fg_color
	text[INSENSITIVE] = darker (@bg_color)
}

# Workaround style for menus where the text color is used instead of the fg color.
style "menuitem_text_is_fg_color_workaround" {
	text[NORMAL]      = @fg_color
	text[PRELIGHT]    = @selected_fg_color
	text[SELECTED]    = @selected_fg_color
	text[ACTIVE]      = @fg_color
	text[INSENSITIVE] = darker (@bg_color)
}

# Workaround style for places where the fg color is used instead of the text color.
style "fg_is_text_color_workaround" {
	fg[NORMAL]        = @text_color
	fg[PRELIGHT]      = @text_color
	fg[SELECTED]      = @selected_fg_color
	fg[ACTIVE]        = @selected_fg_color
	fg[INSENSITIVE]   = darker (@bg_color)
}

# Style to set the toolbar to use a flat style. This is because the "New" button in
# Evolution is not drawn transparent. So if there is a gradient in the background it will
# look really wrong.
# See http://bugzilla.gnome.org/show_bug.cgi?id=446953.
style "evo_new_button_workaround" {
}

# Makes the text in the toolbar and statusbar smaller. Remove if you want to use the default size.
style "smaller-text"
{
	font_name = "7"
}
widget_class "*ToolButton*" style "smaller-text"
widget_class "*Statusbar*" style "smaller-text"

###############################################################################
# The following part of the gtkrc applies the different styles to the widgets.
###############################################################################

# The default style is applied to every widget
class "GtkWidget" style "default"

class "GtkSeparator" style "wide"
class "GtkFrame" style "wide"
class "GtkCalendar" style "wide"
class "GtkEntry" style "entry"

class "GtkSpinButton" style "spinbutton"
class "GtkScale" style "scale"
class "GtkVScale" style "vscale"
class "GtkHScale" style "hscale"
class "GtkScrollbar" style "scrollbar"
class "GtkHScrollbar" style "hscrollbar"
class "GtkVScrollbar" style "vscrollbar"
class "GtkCalendar" style "calendar"
class "GtkRadioButton" style "radiocheck"
class "GtkCheckButton" style "radiocheck"

# General matching follows. The order is choosen so that the right styles override
# each other. EG. progressbar needs to be more important than the menu match.
widget_class "*<GtkNotebook>" style "notebook_bg"
# This is not perfect, it could be done better.
# (That is modify *every* widget in the notebook, and change those back that
# we really don't want changed)
widget_class "*<GtkNotebook>*<GtkEventBox>" style "notebook_bg"
widget_class "*<GtkNotebook>*<GtkDrawingArea>" style "notebook_bg"
widget_class "*<GtkNotebook>*<GtkLayout>" style "notebook_bg"
widget_class "*<GtkNotebook>*<GtkLabel>" style "notebook_bg"

widget_class "*<GtkToolbar>*" style "toolbar"

widget_class "*<GtkScrolledWindow>*" style "scrolledwindow"

widget_class "*<GtkButton>" style "button"
widget_class "*<GtkToolbar>.*.<GtkButton>*" style "toolbar-button"
widget_class "*<GtkNotebook>" style "notebook"
widget_class "*<GtkStatusbar>*" style "statusbar"

widget_class "*<GtkComboBoxEntry>*" style "comboboxentry"
widget_class "*<GtkCombo>*" style "comboboxentry"

widget_class "*<GtkMenuBar>*" style "menubar"
widget_class "*<GtkMenu>*" style "menu"
widget_class "*<GtkMenuItem>*" style "menu_item"
widget_class "*<GtkSeparatorMenuItem>*" style "separator_menu_item"
widget_class "*<GtkMenuBar>*<GtkMenuItem>" style "menubar_item"

widget_class "*.<GtkFrame>.<GtkLabel>" style "frame_title"
widget_class "*.<GtkTreeView>*" style "treeview"

widget_class "*<GtkProgress>" style "progressbar"
widget_class "*<GtkMenuItem>.*.<GtkProgressBar>" style "progressbar_menu_item"
widget "*debconf_progress_window.*.progress_bar" style "progressbar_ubiquity"


# Treeview headers (and similar stock GTK+ widgets)
widget_class "*.<GtkScrolledWindow>*<GtkTreeView>*" style "treeview_header_scrolled"
widget_class "*.<GtkTreeView>.<GtkButton>" style "treeview_header"
widget_class "*.<GtkCTree>.<GtkButton>" style "treeview_header"
widget_class "*.<GtkList>.<GtkButton>" style "treeview_header"
widget_class "*.<GtkCList>.<GtkButton>" style "treeview_header"
widget_class "*.<GtkTreeView>.<GtkButton>.*<GtkLabel>" style "treeview_header"
widget_class "*.<GtkCTree>.<GtkButton>.*<GtkLabel>" style "treeview_header"
widget_class "*.<GtkList>.<GtkButton>.*<GtkLabel>" style "treeview_header"
widget_class "*.<GtkCList>.<GtkButton>.*<GtkLabel>" style "treeview_header"

# The window of the tooltip is called "gtk-tooltip"
##################################################################
# FIXME:
# This will not work if one embeds eg. a button into the tooltip.
# As far as I can tell right now we will need to rework the theme
# quite a bit to get this working correctly.
# (It will involve setting different priorities, etc.)
##################################################################
widget "gtk-tooltip*" style "tooltips"

##########################################################################
# Following are special cases and workarounds for issues in applications.
##########################################################################

# Workaround for the evolution ETable (bug #527532)
widget_class "*.ETable.ECanvas" style "treeview_header"
# Workaround for the evolution ETree
widget_class "*.ETree.ECanvas" style "treeview_header"

# Special case the nautilus-extra-view-widget
# ToDo: A more generic approach for all applications that have a widget like this.
widget "*.nautilus-extra-view-widget" style : highest "nautilus_location"

# Work around for http://bugzilla.gnome.org/show_bug.cgi?id=382646
# Note that this work around assumes that the combobox is _not_ in appears-as-list mode.
widget_class "*.<GtkComboBox>.<GtkCellView>" style "text_is_fg_color_workaround"
# This is the part of the workaround that fixes the menus
widget "*.gtk-combobox-popup-menu.*" style "menuitem_text_is_fg_color_workaround"

# Work around the usage of GtkLabel inside GtkListItems to display text.
# This breaks because the label is shown on a background that is based on the base color.
widget_class "*<GtkListItem>*" style "fg_is_text_color_workaround"
# GtkCList also uses the fg color to draw text on top of the base colors.
widget_class "*<GtkCList>" style "fg_is_text_color_workaround"
# Nautilus when renaming files, and maybe other places.
widget_class "*<EelEditableLabel>" style "fg_is_text_color_workaround"

# See the documentation of the style.
widget_class "EShellWindow.GtkVBox.BonoboDock.BonoboDockBand.BonoboDockItem*" style "evo_new_button_workaround"

# Theme panel elements
widget "*PanelWidget*" 					style "panel"
widget "*PanelApplet*" 					style "panel"
widget "*fast-user-switch*"				style "panel" # workaround for Fast User Switch applet
class "PanelApp*" 					style "panel"
class "PanelToplevel*" 					style "panel"
widget_class "*notif*" 					style "panel"
widget_class "*Notif*" 					style "panel"
widget_class "*CPUFreqApplet*" 				style:highest "applet-text" # CPU Frequency Applet

#XFCE panel
widget_class "*notif*"		style "panel"
widget_class "*Notif*"		style "panel"
widget_class "*Tray*"		style "panel"
widget_class "*tray*"		style "panel"
widget "*Xfce*Panel*"		style "panel"
class "*Xfce*Panel*"		style "panel"
